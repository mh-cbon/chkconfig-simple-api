{
  "name": "Chkconfig-simple-api",
  "tagline": "Simple api to manage services via chkconfig sysvinit helper",
  "body": "# chkconfig-simple-api\r\n\r\nSimple api to interface with chkconfig.\r\n\r\n# install\r\n\r\n```sh\r\nnpm i @mh-cbon/chkconfig-simple-api --save\r\n```\r\n\r\n# usage\r\n\r\n```js\r\nvar ChkconfigApi = require('@mh-cbon/chkconfig-simple-api');\r\nvar chapi = new ChkconfigApi(/* version */);\r\n\r\n// chkconfig --list\r\nchapi.list(opts={}, function (err, items) {\r\n  err && console.log(err);\r\n  console.log(items);\r\n})\r\n\r\n// chkconfig --list serviceId\r\nchapi.list(opts={id: 'serviceId'}, function (err, items) {\r\n  err && console.log(err);\r\n  console.log(items);\r\n})\r\n\r\n// Parse chkconfig init script headers\r\nchapi.describe('serviceId', function (err, info) {\r\n  err && console.log(err);\r\n  console.log(info);\r\n})\r\n\r\n// chkconfig serviceId on\r\nchapi.enable('serviceId', opts={}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --levels '234' serviceId on\r\nchapi.enable('serviceId', opts={runLevels: '234'}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig serviceId off\r\nchapi.disable('serviceId', opts={}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --levels '234' serviceId off\r\nchapi.disable('serviceId', opts={runLevels: '234'}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig serviceId reset\r\nchapi.reset('serviceId', opts={}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --levels '234' serviceId reset\r\nchapi.reset('serviceId', opts={runLevels: '234'}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig serviceId resetpriorities\r\nchapi.resetPriorities('serviceId', opts={}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --levels '234' serviceId resetpriorities\r\nchapi.resetPriorities('serviceId', opts={runLevels: '234'}, function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --add serviceId\r\nchapi.add('serviceId', function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --del serviceId\r\nchapi.del('serviceId', function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// chkconfig --override serviceId\r\nchapi.override('serviceId', function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n\r\n\r\n// service serviceId start\r\nchapi.start('serviceId', function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// service serviceId stop\r\nchapi.stop('serviceId', function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// service serviceId reload\r\nchapi.reload('serviceId', function (err) {\r\n  err && console.log(err);\r\n})\r\n\r\n// service serviceId status\r\nchapi.status('serviceId', function (err, s) {\r\n  err && console.log(err);\r\n  s && console.log(s)\r\n})\r\n\r\n\r\n\r\n```\r\n\r\n## Install a Service\r\n\r\n```js\r\n// into /etc/init.d\r\nvar service = {\r\n  override: false,\r\n  id: 'fake',\r\n  content: '# script content'\r\n}\r\nchapi.install(service, done)\r\n\r\n\r\n// into /etc/chkconfig.d\r\nvar service = {\r\n  override: true,\r\n  id: 'fake',\r\n  content: '# script content'\r\n}\r\nchapi.install(service, done)\r\n\r\n\r\n\r\n// later...\r\n// from /etc/init.d\r\nchapi.uninstall({id: 'fake'}, done)\r\n\r\n// from /etc/chkconfig.d\r\nchapi.uninstall({id: 'fake', override: true}, done)\r\n```\r\n\r\n\r\n# read more\r\n\r\n- http://linux.die.net/man/8/chkconfig\r\n- https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/s2-services-chkconfig.html\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}